apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale-proxy
  namespace: tailscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tailscale-proxy
  template:
    metadata:
      labels:
        app: tailscale-proxy
    spec:
      serviceAccountName: tailscale
      initContainers:
        - name: sysctler
          image: busybox:latest
          securityContext:
            privileged: true
          command: ["/bin/sh"]
          args:
            - -c
            - sysctl -w net.ipv4.ip_forward=1 net.ipv6.conf.all.forwarding=1
      containers:
        - name: tailscale
          image: ghcr.io/tailscale/tailscale:latest
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            - |
              tailscaled --state=kube:tailscale-auth --socket=/tmp/tailscaled.sock &
              sleep 5
              tailscale up --authkey=$(cat /etc/tailscale/auth.key) --accept-routes --advertise-routes=192.168.68.0/24
              tailscale serve --bg http://192.168.68.6:80
              sleep infinity
          env:
            - name: TS_KUBE_SECRET
              value: tailscale-auth
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-auth
                  key: TS_AUTHKEY
            - name: TS_DEST_IP
              valueFrom:
                secretKeyRef:
                  name: tailscale-ip-ingress
                  key: TS_IPINGRESS
          volumeMounts:
            - name: tailscale-auth
              mountPath: /etc/tailscale
              readOnly: true
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          livenessProbe:
            httpGet:
              path: /health
              port: 41641
            initialDelaySeconds: 30
            periodSeconds: 60
      volumes:
        - name: tailscale-auth
          secret:
            secretName: tailscale-auth